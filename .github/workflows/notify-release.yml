name: Notify release
on:
  release:
    types:
      - "published"
      - "unpublished"
      - "created"
      - "edited"
      - "deleted"
      - "prereleased"
      - "released"
jobs:
  First-Step:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  Retrieve-Latest-Release:
    runs-on: ubuntu-latest
    steps:
      - id: fetch-info
        shell: bash
        run: |
          owner="${{ inputs.owner }}"
          repo="${{ inputs.repo }}"
          release_json=$(curl https://api.github.com/repos/$owner/$repo/releases/latest)
          latest_tag=$(echo "$release_json" | jq -r '.tag_name')
          latest_tag_published_at=$(echo "$release_json" | jq -r '.published_at')
          target_commitish=$(echo "$release_json" | jq -r '.target_commitish')
          echo "latest_tag: $latest_tag"
          echo "latest_tag_published_at: $latest_tag_published_at"
          echo "target_commitish: $target_commitish"
          echo ::set-output name=latest_tag::"$latest_tag"
          echo ::set-output name=latest_tag_published_at::"$latest_tag_published_at"
          echo ::set-output name=target_commitish::"$target_commitish"
  # Notify-Slack:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Notify slack
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #       uses: abinoda/slack-action@master
  #       with:
  #         args: '{\"channel\":\"[Channel ID]\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Who?:* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'
